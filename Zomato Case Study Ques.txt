Q1. What is the total amount each customer spent on Zomato?
SELECT distinct userid,
sum(price) as amount
FROM sales as s
left join product as p on p.product_id = s.product_id
group by 1

Q2. How many days has each customer visited Zomato?
SELECT distinct userid,
count(created_date) as visits
FROM sales as s
group by 1

Q3. What was the first product purchased by each customer?
SELECT
*
from 
(SELECT *,
rank() over(partition by userid order by date(created_date)) as rank
FROM sales as s)
where rank = 1

Q4. What is the most purchased item on the menu and how many times was it purchased by all customers.
SELECT
product_id, count(product_id) as total
FROM sales as s
GROUP by 1
order by 2 DESC
limit 1

Q5. Which item is most popular for each customer?
SELECT *
FROM
(select *,
RANK() over(PARTITION by userid order by total DESC) as RANK
FROM
(SELECT userid,product_id,
 count(product_id) as total
FROM sales as s
GROUP by 1,2
order by 1 
) as d
) as f
where rank = 1

Q6. Which item was purchased first by the customer after they became a member?
SELECT
*
FROM
(SELECT
*,
rank() over(PARTITION by userid order by date(created_date)) as rank
from
(select s.* ,
(case when date(created_date) > date(gold_signup_date) then '1' 
 else '0' end) as after_gold
from sales as s
left join gold_users as b on b.userid = s.userid
-- or date(created_date) >= date(gold_signup_date)
 ) as cal
 where after_gold = '1'
 )
 where rank = '1'

Q7. Which item was purchased just before the customer became a member?
select * FROM
(SELECT
*,
rank() over(PARTITION by userid order by date(created_date) DESC) as rank
from
(select s.* 
from sales as s
inner join gold_users as b on b.userid = s.userid and date(created_date) < date(gold_signup_date)
 ) as cal
)
 where rank = '1'

Q8. What is the total orders and amount spent for each member before they became a member?
select userid,
count(product_id) as orders,
sum(price) as amount
from
(select s.* ,p.price
from sales as s
inner join gold_users as b on b.userid = s.userid and date(created_date) < date(gold_signup_date)
 left join product as p on p.product_id = s.product_id
 ) as cal
group by 1

Q9. If buying each product generates points for eg 5rs=2 Zomato points and each product has different purchasing points for eg. for p1 5rs=1 Zomato point, for p2 10rs= 5 Zomato points and for p3 5rs=1 Zomato point
Calculate points collected by each customers and for which product most points have been given till now?

FIRST
select 
userid,
sum(points)*2.5
from
(select s.*, p.price,
(case when s.product_id = '1' then (p.price / 5 )*1 
     when s.product_id = '2' then (p.price / 10 )*5
     when s.product_id = '3' then (p.price / 5 )*1
     end ) as points
from sales as s
left join product as p on p.product_id = s.product_id
)
group by 1

SECOND
select 
product_id,
sum(points)*2.5
from
(select s.*, p.price,
(case when s.product_id = '1' then (p.price / 5 )*1 
     when s.product_id = '2' then (p.price / 10 )*5
     when s.product_id = '3' then (p.price / 5 )*1
     end ) as points
from sales as s
left join product as p on p.product_id = s.product_id
)
group by 1
ORDER BY 2 DESC

Q10. In the first one year after a customer joins the gold program (including their join date) irrespective of what the customer has purchased they earn 5 Zomato points for every 10 rs spent. 
Who earned more 1 or 3 and what was their points earnings in their first year?
SELECT d.*,p.price, (p.price/2) as points
from
(select s.*,b.gold_signup_date
from sales as s
inner join gold_users as b on b.userid = s.userid
and date(created_date) >= date(gold_signup_date)
and date(created_date) <= date(gold_signup_date)+365) as d
inner join product as p on p.product_id = d.product_id

Q11. Rank all transactions of the customers.
SELECT
*,
rank() over(PARTITION by userid order by date(created_date) DESC) as rank
from sales

Q12. Rank all the transactions for each member whenever they are a Zomato gold member for every non gold member transaction mark as na
SELECT
*, 
(case when rank1 = '0' then 'na'
else (rank1) end ) as rank2
from
(SELECT
userid,created_date,product_id,gold_signup_date,rank,
cast((case when gold_signup_date is not null then d.rank
 else 0 end) as VARCHAR) as rank1
from
(SELECT
*,
rank() over(PARTITION by userid order by date(created_date) DESC) as rank
FROM
(select s.*,b.gold_signup_date
from sales as s
left join gold_users as b on b.userid = s.userid
and date(created_date) >= date(gold_signup_date)
 ) as c
) as d
 ) as r




